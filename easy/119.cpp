/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   119.cpp                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mikim <mikim@student.42.us.org>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2019/11/14 15:54:18 by mikim             #+#    #+#             */
/*   Updated: 2019/11/14 15:54:34 by mikim            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/*                                                              Mingyun Kim   */
/*                                           https://www.github.com/mikim42   */
/* ************************************************************************** */

/*
**	LeetCode: 119. Pascal's Triangle II [easy]
*/

class Solution {
	public:
		vector<int> getRow(int rowIndex) {
			vector<int> v{1};

			for (int i = 1; i < rowIndex + 1; i++) {
				v.push_back((long)v[i - 1] * (rowIndex - i + 1) / i);
			}
			return v;
		}
};
