/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   278.cpp                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mikim <mikim@student.42.us.org>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/01/25 20:08:25 by mikim             #+#    #+#             */
/*   Updated: 2020/01/25 20:08:45 by mikim            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

/* ************************************************************************** */
/*                                                              Mingyun Kim   */
/*                                           https://www.github.com/mikim42   */
/* ************************************************************************** */

/*
**	LeetCode: 278. First Bad Version [easy]
*/

class Solution {
	public:
		int firstBadVersion(int n) {
			int l = 1, r = n, mid;
			while (l < r) {
				mid = l + (r - l) / 2;
				if (isBadVersion(mid))
					r = mid;
				else
					l = mid + 1;
			}
			return l;
		}
};
